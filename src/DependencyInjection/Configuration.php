<?php

namespace MembersBundle\DependencyInjection;

use MembersBundle\Form\Type\ChangePasswordFormType;
use MembersBundle\Form\Type\ProfileFormType;
use MembersBundle\Form\Type\RegistrationFormType;
use MembersBundle\Form\Type\ResettingFormType;
use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

class Configuration implements ConfigurationInterface
{
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('members');
        $rootNode
            ->children()
                ->booleanNode('send_admin_mail_after_register')->end()
                ->booleanNode('send_user_mail_after_confirmed')->end()
                ->scalarNode('post_register_type')->end()
                ->arrayNode('user')
                    ->isRequired()
                    ->children()
                        ->arrayNode('adapter')
                            ->children()
                                ->scalarNode('class_name')->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('group')
                    ->isRequired()
                    ->children()
                        ->arrayNode('adapter')
                            ->children()
                                ->scalarNode('class_name')->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('auth')
                    ->isRequired()
                        ->children()
                        ->arrayNode('adapter')
                            ->children()
                                ->scalarNode('class_name')->end()
                                ->scalarNode('object_path')->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('restriction')
                    ->isRequired()
                    ->children()
                            ->booleanNode('enabled')->defaultFalse()->end()
                            ->arrayNode('allowed_objects')
                            ->prototype('scalar')->end()
                        ->end()
                    ->end()
                ->end()

                # configuration
                ->arrayNode('relations')
                    ->addDefaultsIfNotSet()
                    ->children()

                        ->arrayNode('profile')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                            ->children()
                                ->arrayNode('form')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('type')->defaultValue(ProfileFormType::class)->end()
                                        ->scalarNode('name')->defaultValue('members_user_profile_form')->end()
                                        ->arrayNode('validation_groups')
                                            ->prototype('scalar')->end()
                                            ->defaultValue(['Profile', 'Default'])
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()

                        ->arrayNode('change_password')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                                ->children()
                                    ->arrayNode('form')
                                        ->addDefaultsIfNotSet()
                                        ->children()
                                            ->scalarNode('type')->defaultValue(ChangePasswordFormType::class)->end()
                                            ->scalarNode('name')->defaultValue('members_user_change_password_form')->end()
                                            ->arrayNode('validation_groups')
                                                ->prototype('scalar')->end()
                                                ->defaultValue(['ChangePassword', 'Default'])
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()

                        ->arrayNode('registration')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                                ->children()
                                    ->arrayNode('form')
                                        ->addDefaultsIfNotSet()
                                            ->children()
                                                ->scalarNode('type')->defaultValue(RegistrationFormType::class)->end()
                                                ->scalarNode('name')->defaultValue('members_user_registration_form')->end()
                                                ->arrayNode('validation_groups')
                                                    ->prototype('scalar')->end()
                                                    ->defaultValue(['Registration', 'Default'])
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()

                        ->arrayNode('resetting')
                            ->addDefaultsIfNotSet()
                            ->canBeUnset()
                                ->children()
                                    ->scalarNode('retry_ttl')->defaultValue(7200)->end()
                                    ->scalarNode('token_ttl')->defaultValue(86400)->end()
                                    ->arrayNode('form')
                                        ->addDefaultsIfNotSet()
                                            ->children()
                                            ->scalarNode('type')->defaultValue(ResettingFormType::class)->end()
                                            ->scalarNode('name')->defaultValue('members_user_resetting_form')->end()
                                            ->arrayNode('validation_groups')
                                                ->prototype('scalar')->end()
                                                ->defaultValue(['ResetPassword', 'Default'])
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                ->end()
                # configuration end

                ->arrayNode('emails')
                    ->isRequired()
                    ->children()
                        ->scalarNode('register_confirm')->end()
                        ->scalarNode('register_confirmed')->end()
                        ->scalarNode('register_password_resetting')->end()
                        ->scalarNode('admin_register_notification')->end()
                    ->end()
                ->end()

            ->end()
        ;

        return $treeBuilder;
    }
}